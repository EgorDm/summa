syntax = "proto3";
package summa;

import "proto/index.proto";

service IndexApi {
  rpc commit_index (CommitIndexRequest) returns (CommitIndexResponse) {}
  rpc create_index (CreateIndexRequest) returns (CreateIndexResponse) {}
  rpc delete_index (DeleteIndexRequest) returns (DeleteIndexResponse) {}
  rpc get_index_aliases (GetIndexAliasesRequest) returns (GetIndexAliasesResponse) {}
  rpc get_index (GetIndexRequest) returns (GetIndexResponse) {}
  rpc get_indices (GetIndicesRequest) returns (GetIndicesResponse) {}
  rpc index_document (IndexDocumentRequest) returns (IndexDocumentResponse) {}
  rpc set_index_alias (SetIndexAliasRequest) returns (SetIndexAliasResponse) {}
}

message CommitIndexRequest {
  string index_name = 1;
}
message CommitIndexResponse {}

message CreateIndexRequest {
  string index_name = 1;
  string schema = 2;
  optional string primary_key = 3;
  repeated string default_fields = 4;
  optional string compression = 5;
  optional uint64 writer_heap_size_bytes = 6;
  optional uint64 writer_threads = 7;
  optional uint64 autocommit_interval_ms = 8;
}
message CreateIndexResponse {}
message DeleteIndexRequest {
  string index_name = 1;
  bool cascade = 2;
}
message DeleteIndexResponse {
  repeated string deleted_index_aliases = 1;
  repeated string deleted_consumer_names = 2;
}
message GetIndexAliasesRequest {}
message GetIndexAliasesResponse {
  map<string, string> index_aliases = 1;
}
message GetIndexRequest {
  string index_name = 1;
}
message GetIndexResponse {
  Index index = 1;
}
message GetIndicesRequest {}
message GetIndicesResponse {
  repeated Index indices = 1;
}
message IndexDocumentRequest {
  string index_name = 1;
  bytes document = 2;
  bool reindex = 3;
}
message IndexDocumentResponse {}
message SetIndexAliasRequest {
  string index_alias = 1;
  string index_name = 2;
}
message SetIndexAliasResponse {
  optional string old_index_name = 1;
}