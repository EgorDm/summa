syntax = "proto3";
package summa.proto;

import "summa/proto/index.proto";

service IndexApi {
  rpc commit_index (CommitIndexRequest) returns (CommitIndexResponse) {}
  rpc create_index (CreateIndexRequest) returns (CreateIndexResponse) {}
  rpc delete_index (DeleteIndexRequest) returns (DeleteIndexResponse) {}
  rpc get_indices_aliases (GetIndicesAliasesRequest) returns (GetIndicesAliasesResponse) {}
  rpc get_index (GetIndexRequest) returns (GetIndexResponse) {}
  rpc get_indices (GetIndicesRequest) returns (GetIndicesResponse) {}
  rpc index_document (IndexDocumentRequest) returns (IndexDocumentResponse) {}
  rpc merge_segments (MergeSegmentsRequest) returns (MergeSegmentsResponse) {}
  rpc set_index_alias (SetIndexAliasRequest) returns (SetIndexAliasResponse) {}
  rpc vacuum_index (VacuumIndexRequest) returns (VacuumIndexResponse) {}
}

enum CommitMode {
  Async = 0;
  Sync = 1;
}

message CommitIndexRequest {
  string index_name = 1;
  CommitMode commit_mode = 2;
}

message CommitIndexResponse {
  optional uint64 opstamp = 1;
  string status = 2;
}

enum Order {
  Asc = 0;
  Desc = 1;
}
message SortByField {
  string field = 1;
  Order order = 2;
}
message CreateIndexRequest {
  string index_name = 1;
  string schema = 2;
  IndexEngine index_engine = 10;
  optional string primary_key = 3;
  repeated string default_fields = 4;
  optional string compression = 5;
  optional uint64 writer_heap_size_bytes = 6;
  optional uint64 writer_threads = 7;
  optional uint64 autocommit_interval_ms = 8;
  optional SortByField sort_by_field = 9;
  repeated string multi_fields = 11;
  repeated string stop_words = 12;
}
message CreateIndexResponse {
  Index index = 1;
}
message DeleteIndexRequest {
  string index_name = 1;
  bool cascade = 2;
}
message DeleteIndexResponse {
  repeated string deleted_index_aliases = 1;
  repeated string deleted_index_consumers = 2;
}
message GetIndicesAliasesRequest {}
message GetIndicesAliasesResponse {
  map<string, string> indices_aliases = 1;
}
message GetIndexRequest {
  string index_name = 1;
}
message GetIndexResponse {
  Index index = 1;
}
message GetIndicesRequest {}
message GetIndicesResponse {
  repeated Index indices = 1;
}
message IndexDocumentRequest {
  string index_name = 1;
  bytes document = 2;
}
message IndexDocumentResponse {
  uint64 opstamp = 1;
}
message MergeSegmentsRequest {
  string index_name = 1;
  repeated string segment_ids = 2;
}
message MergeSegmentsResponse {}
message SetIndexAliasRequest {
  string index_alias = 1;
  string index_name = 2;
}
message SetIndexAliasResponse {
  optional string old_index_name = 1;
}
message VacuumIndexRequest {
  string index_name = 1;
}
message VacuumIndexResponse {
  repeated string deleted_files = 1;
}